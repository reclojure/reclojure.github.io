{"version":3,"sources":["portal/async.cljc"],"mappings":"","names":[],"sourcesContent":["(ns portal.async\n  (:refer-clojure :exclude [let promise])\n  #?(:cljs (:require-macros portal.async)))\n\n(defmacro do [& body]\n  (reduce\n   (fn [chain form]\n     `(.then ~chain\n             (fn [] (js/Promise.resolve ~form))))\n   `(js/Promise.resolve nil)\n   body))\n\n(defmacro let [bindings & body]\n  (->> (partition-all 2 bindings)\n       reverse\n       (reduce (fn [body [n v]]\n                 `(.then (js/Promise.resolve ~v)\n                         (fn [~n] ~body)))\n               `(portal.async/do ~@body))))\n\n"]}